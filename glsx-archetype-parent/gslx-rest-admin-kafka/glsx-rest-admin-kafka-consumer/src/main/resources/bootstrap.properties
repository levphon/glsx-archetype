#项目名称
spring.application.name=glsx-rest-kafka-consumer

#日志路径（logback-spring.xml读取，不要加入配置中心）
logging.path=/data/java_log/jetty/${spring.application.name}/${spring.application.name}.log

#nacos配置中心
spring.cloud.nacos.config.server-addr=192.168.0.63:8848
#nacos配置id，完整dataId=${spring.cloud.nacos.config.prefix}-${spring.profiles.active}.${file-extension（由新增配置时选的文件类型决定）}
#示例：http://192.168.0.63:8848/nacos/v1/cs/configs?dataId=glsx-rest-admin.properties&group=DEV_GROUP

spring.cloud.nacos.config.group=DEV_GROUP
#配置prefix，默认值同${spring.application.name}
spring.cloud.nacos.config.prefix=${spring.application.name}
#配置开发环境
#spring.profiles.active=DEV
#配置格式
#spring.cloud.nacos.config.file-extension=properties

#微服务sentinel、zipkin、actuator等公共配置
spring.cloud.nacos.config.shared-configs[0].data-id=glsx-rest-microservice-share.properties
spring.cloud.nacos.config.shared-configs[0].group=DEV_GROUP
spring.cloud.nacos.config.shared-configs[0].refresh=true

#数据库、redis等公共配置
spring.cloud.nacos.config.shared-configs[1].group=DEV_GROUP
spring.cloud.nacos.config.shared-configs[1].data-id=glsx-rest-admin-share.properties
spring.cloud.nacos.config.shared-configs[1].refresh=true



server.port=8778
server.servlet.context-path=/${spring.application.name}

#=============== kafka consumer  =======================
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.consumer.bootstrap-servers=192.168.0.63:9092
# 指定默认消费者group id --> 由于在kafka中，同一组中的consumer不会读取到同一个消息，依靠groud.id设置组名
spring.kafka.consumer.group-id=${spring.application.name}-group
# smallest和largest才有效，如果smallest重新0开始读取，如果是largest从logfile的offset读取。一般情况下我们都是设置smallest
spring.kafka.consumer.auto-offset-reset=smallest
# enable.auto.commit:true --> 设置自动提交offset
spring.kafka.consumer.enable-auto-commit=true
#如果'enable.auto.commit'为true，则消费者偏移自动提交给Kafka的频率（以毫秒为单位），默认值为5000。
spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

topic.test_topic=test_topic



#Ancient Kafka配置=======================
#zookeeper.connect
kafka.config.zkConnect=192.168.3.131:2181
#zookeeper.connect.timeout.ms
kafka.config.zkConnectTimeout=40000
#zookeeper.session.timeout.ms
kafka.config.zkSessionTimeout=40000
#group.id
kafka.config.groupId=${spring.application.name}-group
#rebalance.backoff.ms
kafka.config.rebalanceBackoff=3000
#rebalance.max.retries
kafka.config.rebalanceMaxRetries=8
#commit.interval.ms
kafka.config.autoCommitInterval=60000
#auto.offset.reset
kafka.config.autoOffsetReset=smallest

#consumer thread
topic.test_topic.nThreads=1